{"version":3,"sources":["components/Todo_List.js","components/Todo_Add.js","App.js","reportWebVitals.js","index.js"],"names":["Todo_List","props","check_todo","e","len","todo","length","i","target","parentNode","children","classList","contains","remove","add","chk_todo_childEle","j","del_todo","_target","childElementCount","l","done_todo","tagName","k","edit_todo","m","setState","index","value","console","log","state","txt","update_todo","class","className","edit_onChange","enter_keydown","keyCode","replace","list","getData","this","done","push","ref","list_li","onClick","type","onChange","onKeyDown","date","Component","Todo_Add","insert_todo","preventDefault","onSubmit","focus","input_onChange","App","todo_list","bind","delete_todo","time","Date","_todo","getFullYear","getMonth","toString","getDate","getHours","getMinutes","_temp","todo_index","splice","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b895abe9.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\n\nclass Todo_List extends Component{\n\t constructor(props){\n        super(props)\n        this.state = {\n            class : '',\n\t\t\tindex : 0,\n\t\t\ttxt : ''\n        }\n\n    }\n\n    check_todo = e =>{\n\n        const len = this.props.todo.length;\n    \n        for(let i = 0 ; i < len ; i++){\n    \n            if(e.target.parentNode.children[i] === e.target){\n        \n                if(!e.target.classList.contains('done')){\n                    e.target.classList.add('done');\n                }else{\n                    e.target.classList.remove('done');\n                }\n            }\n        }\n    }\n    \n    chk_todo_childEle = e =>{\n        const len = this.props.todo.length;\n\n        for(let j = 0 ; j < len ; j++){\n            if(e.target.parentNode.parentNode.children[j] === e.target.parentNode){\n\n                if(!e.target.parentNode.classList.contains('done')){\n                    e.target.parentNode.classList.add('done');\n                }else{\n                    e.target.parentNode.classList.remove('done');\n                }\n            }\n        }\n    }\n\n    del_todo = e =>{\n\n        const _target = e.target;\n        const len = _target.parentNode.parentNode.childElementCount;\n\n        for(let l=0 ; l<len ; l++){\n            if(_target.parentNode.parentNode.children[l] ===\n                _target.parentNode){\n\n                   this.props.del_todo(l) // 부모 컴포넌트에게 지울 todo의 index값 전송 \n                    \n                }\n        }\n    }\n\n    done_todo = e =>{\n        \n        const _target = e.target;\n        const len = _target.parentNode.childElementCount;\n\n        if( _target.tagName === 'LI'){\n        \n            for(let k=0 ; k<len ; k++){\n                if(_target.parentNode.children[k] ===\n                    _target){\n    \n                       this.props.done_todo(k) // 부모 컴포넌트에게 지울 todo의 index값 전송 \n                        \n                    }\n            }\n        }    \n    }\n\t\n\tedit_todo = e =>{\n\t\t\n\t\tconst _target = e.target.parentNode;\n\t\tconst len = _target.parentNode.childElementCount;\n\t\t//텍스트박스 표시\n\n        for(let m = 0 ; m < len ; m++){ //클릭한 todo를 제외한 나머지 수정상태 제거\n\t\t\tif(_target.parentNode.children[m] ===\n\t\t\t\t_target){\n\n\t\t\t\tthis.setState({\n\t\t\t\t\tindex : m\n\t\t\t\t})\n\t\t\t\t_target.children[0].value = this.props.todo[m].todo;\n\n\t\t\t}else{\n                _target.parentNode.children[m].classList.remove('edit');\n            }\n\t\t}\n        console.log(_target)\n        if( !_target.classList.contains('edit')){ //수정상태가 아닐때\n\n\t\t\tthis.setState({\n\t\t\t\tclass : _target.className\n\t\t\t})\n            _target.classList.add('edit');\t\t\t\n\t\t\n\t\t}else{\n\t\t\t\tif(this.state.txt !== ''){ //내용 변경이 안됬을때 구분해서 todo 업데이트 실행x\n\n\t\t\t\t\tthis.props.update_todo(this.state.index, this.state.txt);\n\t\t\t\t\tthis.setState({\n\t\t\t\t\ttxt : ''\n\t\t\t\t})\n\t\t\t}\n\t\t\t_target.classList.remove('edit')\n\t\t\t_target.children[0].value = '';\n\t\t}\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\t// <li>태그 클래스 변경\n\t\t\n\n\t}\n\t\n\tedit_onChange = e =>{ \n        this.setState({txt : e.target.value})\n    }\n\t\n\tenter_keydown = e =>{\n\t\tif(e.keyCode === 13){\n\n            if(this.state.txt !== ''){ //내용 변경이 안됬을때 구분해서 todo 업데이트 실행x\n\t\t\t    \n                this.props.update_todo(this.state.index, this.state.txt);\n            \n            }\n\t\t\te.target.parentNode.classList.replace('edit', this.state.class);\n\t\t}\n\t}\n    \n    render(){\n        \n        let list = [];\n        let getData = this.props.todo;\n\n        for(let i=0 ; i < getData.length ; i++){\n\n            const done = getData[i].done === 1 ? 'done' : 'ing';\n            \n            list.push(\n                <li key={i} ref={this.list_li} onClick={this.done_todo} className={done}>\n\t\t\t\t\t<input type=\"text\" className={'edit_txt'} onChange={this.edit_onChange}  onKeyDown={this.enter_keydown}/>\n                    <span onClick={this.chk_todo_childEle} className=\"todo_txt\">{getData[i].todo}</span>\n                    <span onClick={this.chk_todo_childEle} className=\"date_txt\">{getData[i].date}</span>\n                    <span className=\"edit_btn\" onClick={this.edit_todo}></span>\n                    <span className=\"delete_btn\" onClick={this.del_todo}></span>\n                </li>\n            )\n\n        }\n\n        return (\n            <div className=\"todo_list_wrap\">\n                <ul className=\"list\">\n                    {list}\n                </ul>\n            </div>     \n        );\n    }\n}\n\nexport default Todo_List;","import React, {Component} from 'react';\n\n\nclass Todo_Add extends Component{\t\t\n    constructor(props){\n        super(props)\n        this.state = {\n            todo : ''\n        }\n\n    }\n\n    insert_todo = e =>{\n        e.preventDefault();\n\n        if(this.state.todo !== ''){\n            this.props.onSubmit(this.state.todo);\n            this.setState({todo : ''});\n            e.target[0].value = '';\n            e.target[0].focus();\n        }\n    }\n\n    input_onChange = e =>{ \n        this.setState({todo : e.target.value})\n    }\n\n    render(){\n\n        return (\n            <form className=\"todo_add_wrap\" onSubmit={this.insert_todo}>\n                <input type=\"text\" className=\"todo_input_txt\" onChange={ this.input_onChange }></input>\n                <button className=\"add_btn\"></button>\n            </form>          \n        );\n        }\n    }\n\nexport default Todo_Add;","import React, { Component } from 'react';\nimport Todo_List from \"./components/Todo_List\";\nimport Todo_Add from \"./components/Todo_Add\";\nimport './App.css';\n\n\nclass App extends Component{\t\t\n\n  constructor(props){\n    super(props);\n    this.state = {\n      todo_list:[\n      /*  {\n          todo : '씻기',\n          date : '2021/04/30 - 13:11',\n          done : 0\n        },\n        {\n          todo : '책 읽기',\n          date : '2021/04/21 - 15:47',\n          done : 0\n        },\n        {\n          todo : '운동하기',\n          date : '2021/04/19 - 07:24',\n          done : 0\n        },\n        {\n          todo : '낮잠자기',\n          date : '2021/04/16 - 01:49',\n          done : 0\n        }                                   */\n      ]\n    }    \n    this.insert_todo = this.insert_todo.bind(this);\n    this.delete_todo = this.delete_todo.bind(this);\n    this.done_todo = this.done_todo.bind(this); \n\tthis.update_todo = this.update_todo.bind(this);\n  }\n\n  insert_todo(todo) { //todo 추가\n    \n    const time = new Date()\n    const year = time.getFullYear();\n    const month = (time.getMonth()+1).toString.length === 1 ? ('0' + (time.getMonth()+1)) : (time.getMonth()+1);\n    const date =  time.getDate().toString.length === 1 ? ('0' + time.getDate()) : (time.getMonth()+1);\n    const todo_Date = year + '/' + month + '/' + date + ' ' + time.getHours() + ':' + time.getMinutes();\n    \n    const _todo = {todo : todo, date : todo_Date, done : 0};\n    let _temp = [...this.state.todo_list];\n    _temp.push(_todo);  \n\n    this.setState({\n      todo_list : [..._temp]\n    })\n  }\n\n  delete_todo(todo_index){ //todo 삭제\n    \n    let _temp = [...this.state.todo_list];\n    _temp.splice(todo_index, 1);\n\n      this.setState({\n        todo_list : [..._temp]\n      })\n  }\n\n  done_todo(todo_index){\n    \n    let _temp = [...this.state.todo_list];\n\n    if(_temp[todo_index].done === 0){\n      _temp[todo_index].done = 1;\n    }else{\n      _temp[todo_index].done = 0;\n    }\n\n    this.setState({\n      todo_list : [..._temp]\n    })\n\n  }\n\t\t\n  update_todo(todo_index, txt){\n\t  \n\t  let _temp = [...this.state.todo_list];\n\t\t\n\t  _temp[todo_index].todo = txt; \n\t  this.setState({\n        todo_list : [..._temp]\n      })\t  \n\t  \n  }\n\n  render(){\n\n    return(\n      <main>\n\t\t\t<Todo_Add onSubmit={this.insert_todo}></Todo_Add>\n\t\t\t<Todo_List todo={this.state.todo_list} del_todo={this.delete_todo} done_todo={this.done_todo} update_todo={this.update_todo}></Todo_List>\n      </main>\n    );\n  }\n}\n\nexport default App; ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('todo')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}